environment:
  matrix:
  - JULIAVERSION: "stable/win64"

install:
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile($("http://status.julialang.org/"+$env:JULIAVERSION), "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init();"

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.clone(\"https://github.com/JuliaInv/jInv.jl\", \"jInv\");"
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.clone(\"https://github.com/JuliaInv/DivSigGrad.jl\", \"DivSigGrad\");"
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.clone(\"https://github.com/JuliaInv/ParSpMatVec.jl\", \"ParSpMatVec\"); Pkg.build(\"ParSpMatVec\")"
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.clone(\"https://github.com/lruthotto/KrylovMethods.jl\", \"KrylovMethods\");"
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.clone(pwd(), \"Multigrid\");"

test_script:
  - C:\projects\julia\bin\julia -e "Pkg.test(\"Multigrid\")"
